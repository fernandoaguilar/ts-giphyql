# source: http://localhost:4466
# timestamp: Tue Dec 04 2018 23:45:57 GMT-0800 (PST)

type AggregateGif {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type BatchPayload {
  """The number of nodes that have been affected by the Batch operation."""
  count: Long!
}

scalar DateTime

type Gif implements Node {
  id: ID!
  giphyId: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  url: String!
  rating: String!
  trendingDatetime: String
  title: String
  likedBy(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]
}

"""A connection to a list of items."""
type GifConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [GifEdge]!
  aggregate: AggregateGif!
}

input GifCreateInput {
  giphyId: ID!
  url: String!
  rating: String!
  trendingDatetime: String
  title: String
  likedBy: UserCreateManyWithoutGifsInput
}

input GifCreateManyWithoutLikedByInput {
  create: [GifCreateWithoutLikedByInput!]
  connect: [GifWhereUniqueInput!]
}

input GifCreateWithoutLikedByInput {
  giphyId: ID!
  url: String!
  rating: String!
  trendingDatetime: String
  title: String
}

"""An edge in a connection."""
type GifEdge {
  """The item at the end of the edge."""
  node: Gif!

  """A cursor for use in pagination."""
  cursor: String!
}

enum GifOrderByInput {
  id_ASC
  id_DESC
  giphyId_ASC
  giphyId_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  url_ASC
  url_DESC
  rating_ASC
  rating_DESC
  trendingDatetime_ASC
  trendingDatetime_DESC
  title_ASC
  title_DESC
}

type GifPreviousValues {
  id: ID!
  giphyId: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  url: String!
  rating: String!
  trendingDatetime: String
  title: String
}

input GifScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [GifScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [GifScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [GifScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  giphyId: ID

  """All values that are not equal to given value."""
  giphyId_not: ID

  """All values that are contained in given list."""
  giphyId_in: [ID!]

  """All values that are not contained in given list."""
  giphyId_not_in: [ID!]

  """All values less than the given value."""
  giphyId_lt: ID

  """All values less than or equal the given value."""
  giphyId_lte: ID

  """All values greater than the given value."""
  giphyId_gt: ID

  """All values greater than or equal the given value."""
  giphyId_gte: ID

  """All values containing the given string."""
  giphyId_contains: ID

  """All values not containing the given string."""
  giphyId_not_contains: ID

  """All values starting with the given string."""
  giphyId_starts_with: ID

  """All values not starting with the given string."""
  giphyId_not_starts_with: ID

  """All values ending with the given string."""
  giphyId_ends_with: ID

  """All values not ending with the given string."""
  giphyId_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  url: String

  """All values that are not equal to given value."""
  url_not: String

  """All values that are contained in given list."""
  url_in: [String!]

  """All values that are not contained in given list."""
  url_not_in: [String!]

  """All values less than the given value."""
  url_lt: String

  """All values less than or equal the given value."""
  url_lte: String

  """All values greater than the given value."""
  url_gt: String

  """All values greater than or equal the given value."""
  url_gte: String

  """All values containing the given string."""
  url_contains: String

  """All values not containing the given string."""
  url_not_contains: String

  """All values starting with the given string."""
  url_starts_with: String

  """All values not starting with the given string."""
  url_not_starts_with: String

  """All values ending with the given string."""
  url_ends_with: String

  """All values not ending with the given string."""
  url_not_ends_with: String
  rating: String

  """All values that are not equal to given value."""
  rating_not: String

  """All values that are contained in given list."""
  rating_in: [String!]

  """All values that are not contained in given list."""
  rating_not_in: [String!]

  """All values less than the given value."""
  rating_lt: String

  """All values less than or equal the given value."""
  rating_lte: String

  """All values greater than the given value."""
  rating_gt: String

  """All values greater than or equal the given value."""
  rating_gte: String

  """All values containing the given string."""
  rating_contains: String

  """All values not containing the given string."""
  rating_not_contains: String

  """All values starting with the given string."""
  rating_starts_with: String

  """All values not starting with the given string."""
  rating_not_starts_with: String

  """All values ending with the given string."""
  rating_ends_with: String

  """All values not ending with the given string."""
  rating_not_ends_with: String
  trendingDatetime: String

  """All values that are not equal to given value."""
  trendingDatetime_not: String

  """All values that are contained in given list."""
  trendingDatetime_in: [String!]

  """All values that are not contained in given list."""
  trendingDatetime_not_in: [String!]

  """All values less than the given value."""
  trendingDatetime_lt: String

  """All values less than or equal the given value."""
  trendingDatetime_lte: String

  """All values greater than the given value."""
  trendingDatetime_gt: String

  """All values greater than or equal the given value."""
  trendingDatetime_gte: String

  """All values containing the given string."""
  trendingDatetime_contains: String

  """All values not containing the given string."""
  trendingDatetime_not_contains: String

  """All values starting with the given string."""
  trendingDatetime_starts_with: String

  """All values not starting with the given string."""
  trendingDatetime_not_starts_with: String

  """All values ending with the given string."""
  trendingDatetime_ends_with: String

  """All values not ending with the given string."""
  trendingDatetime_not_ends_with: String
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
}

type GifSubscriptionPayload {
  mutation: MutationType!
  node: Gif
  updatedFields: [String!]
  previousValues: GifPreviousValues
}

input GifSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [GifSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [GifSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [GifSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: GifWhereInput
}

input GifUpdateInput {
  giphyId: ID
  url: String
  rating: String
  trendingDatetime: String
  title: String
  likedBy: UserUpdateManyWithoutGifsInput
}

input GifUpdateManyDataInput {
  giphyId: ID
  url: String
  rating: String
  trendingDatetime: String
  title: String
}

input GifUpdateManyMutationInput {
  giphyId: ID
  url: String
  rating: String
  trendingDatetime: String
  title: String
}

input GifUpdateManyWithoutLikedByInput {
  create: [GifCreateWithoutLikedByInput!]
  connect: [GifWhereUniqueInput!]
  disconnect: [GifWhereUniqueInput!]
  delete: [GifWhereUniqueInput!]
  update: [GifUpdateWithWhereUniqueWithoutLikedByInput!]
  updateMany: [GifUpdateManyWithWhereNestedInput!]
  deleteMany: [GifScalarWhereInput!]
  upsert: [GifUpsertWithWhereUniqueWithoutLikedByInput!]
}

input GifUpdateManyWithWhereNestedInput {
  where: GifScalarWhereInput!
  data: GifUpdateManyDataInput!
}

input GifUpdateWithoutLikedByDataInput {
  giphyId: ID
  url: String
  rating: String
  trendingDatetime: String
  title: String
}

input GifUpdateWithWhereUniqueWithoutLikedByInput {
  where: GifWhereUniqueInput!
  data: GifUpdateWithoutLikedByDataInput!
}

input GifUpsertWithWhereUniqueWithoutLikedByInput {
  where: GifWhereUniqueInput!
  update: GifUpdateWithoutLikedByDataInput!
  create: GifCreateWithoutLikedByInput!
}

input GifWhereInput {
  """Logical AND on all given filters."""
  AND: [GifWhereInput!]

  """Logical OR on all given filters."""
  OR: [GifWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [GifWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  giphyId: ID

  """All values that are not equal to given value."""
  giphyId_not: ID

  """All values that are contained in given list."""
  giphyId_in: [ID!]

  """All values that are not contained in given list."""
  giphyId_not_in: [ID!]

  """All values less than the given value."""
  giphyId_lt: ID

  """All values less than or equal the given value."""
  giphyId_lte: ID

  """All values greater than the given value."""
  giphyId_gt: ID

  """All values greater than or equal the given value."""
  giphyId_gte: ID

  """All values containing the given string."""
  giphyId_contains: ID

  """All values not containing the given string."""
  giphyId_not_contains: ID

  """All values starting with the given string."""
  giphyId_starts_with: ID

  """All values not starting with the given string."""
  giphyId_not_starts_with: ID

  """All values ending with the given string."""
  giphyId_ends_with: ID

  """All values not ending with the given string."""
  giphyId_not_ends_with: ID
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  url: String

  """All values that are not equal to given value."""
  url_not: String

  """All values that are contained in given list."""
  url_in: [String!]

  """All values that are not contained in given list."""
  url_not_in: [String!]

  """All values less than the given value."""
  url_lt: String

  """All values less than or equal the given value."""
  url_lte: String

  """All values greater than the given value."""
  url_gt: String

  """All values greater than or equal the given value."""
  url_gte: String

  """All values containing the given string."""
  url_contains: String

  """All values not containing the given string."""
  url_not_contains: String

  """All values starting with the given string."""
  url_starts_with: String

  """All values not starting with the given string."""
  url_not_starts_with: String

  """All values ending with the given string."""
  url_ends_with: String

  """All values not ending with the given string."""
  url_not_ends_with: String
  rating: String

  """All values that are not equal to given value."""
  rating_not: String

  """All values that are contained in given list."""
  rating_in: [String!]

  """All values that are not contained in given list."""
  rating_not_in: [String!]

  """All values less than the given value."""
  rating_lt: String

  """All values less than or equal the given value."""
  rating_lte: String

  """All values greater than the given value."""
  rating_gt: String

  """All values greater than or equal the given value."""
  rating_gte: String

  """All values containing the given string."""
  rating_contains: String

  """All values not containing the given string."""
  rating_not_contains: String

  """All values starting with the given string."""
  rating_starts_with: String

  """All values not starting with the given string."""
  rating_not_starts_with: String

  """All values ending with the given string."""
  rating_ends_with: String

  """All values not ending with the given string."""
  rating_not_ends_with: String
  trendingDatetime: String

  """All values that are not equal to given value."""
  trendingDatetime_not: String

  """All values that are contained in given list."""
  trendingDatetime_in: [String!]

  """All values that are not contained in given list."""
  trendingDatetime_not_in: [String!]

  """All values less than the given value."""
  trendingDatetime_lt: String

  """All values less than or equal the given value."""
  trendingDatetime_lte: String

  """All values greater than the given value."""
  trendingDatetime_gt: String

  """All values greater than or equal the given value."""
  trendingDatetime_gte: String

  """All values containing the given string."""
  trendingDatetime_contains: String

  """All values not containing the given string."""
  trendingDatetime_not_contains: String

  """All values starting with the given string."""
  trendingDatetime_starts_with: String

  """All values not starting with the given string."""
  trendingDatetime_not_starts_with: String

  """All values ending with the given string."""
  trendingDatetime_ends_with: String

  """All values not ending with the given string."""
  trendingDatetime_not_ends_with: String
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  likedBy_every: UserWhereInput
  likedBy_some: UserWhereInput
  likedBy_none: UserWhereInput
}

input GifWhereUniqueInput {
  id: ID
  giphyId: ID
}

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  createGif(data: GifCreateInput!): Gif!
  createUser(data: UserCreateInput!): User!
  updateGif(data: GifUpdateInput!, where: GifWhereUniqueInput!): Gif
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  deleteGif(where: GifWhereUniqueInput!): Gif
  deleteUser(where: UserWhereUniqueInput!): User
  upsertGif(where: GifWhereUniqueInput!, create: GifCreateInput!, update: GifUpdateInput!): Gif!
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  updateManyGifs(data: GifUpdateManyMutationInput!, where: GifWhereInput): BatchPayload!
  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  deleteManyGifs(where: GifWhereInput): BatchPayload!
  deleteManyUsers(where: UserWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

type Query {
  gifs(where: GifWhereInput, orderBy: GifOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Gif]!
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  gif(where: GifWhereUniqueInput!): Gif
  user(where: UserWhereUniqueInput!): User
  gifsConnection(where: GifWhereInput, orderBy: GifOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): GifConnection!
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!

  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
  ): Node
}

type Subscription {
  gif(where: GifSubscriptionWhereInput): GifSubscriptionPayload
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
}

type User implements Node {
  id: ID!
  email: String!
  password: String!
  name: String!
  gifs(where: GifWhereInput, orderBy: GifOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Gif!]
}

"""A connection to a list of items."""
type UserConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  email: String!
  password: String!
  name: String!
  gifs: GifCreateManyWithoutLikedByInput
}

input UserCreateManyWithoutGifsInput {
  create: [UserCreateWithoutGifsInput!]
  connect: [UserWhereUniqueInput!]
}

input UserCreateWithoutGifsInput {
  email: String!
  password: String!
  name: String!
}

"""An edge in a connection."""
type UserEdge {
  """The item at the end of the edge."""
  node: User!

  """A cursor for use in pagination."""
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  email_ASC
  email_DESC
  password_ASC
  password_DESC
  name_ASC
  name_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type UserPreviousValues {
  id: ID!
  email: String!
  password: String!
  name: String!
}

input UserScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [UserScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  password: String

  """All values that are not equal to given value."""
  password_not: String

  """All values that are contained in given list."""
  password_in: [String!]

  """All values that are not contained in given list."""
  password_not_in: [String!]

  """All values less than the given value."""
  password_lt: String

  """All values less than or equal the given value."""
  password_lte: String

  """All values greater than the given value."""
  password_gt: String

  """All values greater than or equal the given value."""
  password_gte: String

  """All values containing the given string."""
  password_contains: String

  """All values not containing the given string."""
  password_not_contains: String

  """All values starting with the given string."""
  password_starts_with: String

  """All values not starting with the given string."""
  password_not_starts_with: String

  """All values ending with the given string."""
  password_ends_with: String

  """All values not ending with the given string."""
  password_not_ends_with: String
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [UserSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: UserWhereInput
}

input UserUpdateInput {
  email: String
  password: String
  name: String
  gifs: GifUpdateManyWithoutLikedByInput
}

input UserUpdateManyDataInput {
  email: String
  password: String
  name: String
}

input UserUpdateManyMutationInput {
  email: String
  password: String
  name: String
}

input UserUpdateManyWithoutGifsInput {
  create: [UserCreateWithoutGifsInput!]
  connect: [UserWhereUniqueInput!]
  disconnect: [UserWhereUniqueInput!]
  delete: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutGifsInput!]
  updateMany: [UserUpdateManyWithWhereNestedInput!]
  deleteMany: [UserScalarWhereInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutGifsInput!]
}

input UserUpdateManyWithWhereNestedInput {
  where: UserScalarWhereInput!
  data: UserUpdateManyDataInput!
}

input UserUpdateWithoutGifsDataInput {
  email: String
  password: String
  name: String
}

input UserUpdateWithWhereUniqueWithoutGifsInput {
  where: UserWhereUniqueInput!
  data: UserUpdateWithoutGifsDataInput!
}

input UserUpsertWithWhereUniqueWithoutGifsInput {
  where: UserWhereUniqueInput!
  update: UserUpdateWithoutGifsDataInput!
  create: UserCreateWithoutGifsInput!
}

input UserWhereInput {
  """Logical AND on all given filters."""
  AND: [UserWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  password: String

  """All values that are not equal to given value."""
  password_not: String

  """All values that are contained in given list."""
  password_in: [String!]

  """All values that are not contained in given list."""
  password_not_in: [String!]

  """All values less than the given value."""
  password_lt: String

  """All values less than or equal the given value."""
  password_lte: String

  """All values greater than the given value."""
  password_gt: String

  """All values greater than or equal the given value."""
  password_gte: String

  """All values containing the given string."""
  password_contains: String

  """All values not containing the given string."""
  password_not_contains: String

  """All values starting with the given string."""
  password_starts_with: String

  """All values not starting with the given string."""
  password_not_starts_with: String

  """All values ending with the given string."""
  password_ends_with: String

  """All values not ending with the given string."""
  password_not_ends_with: String
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  gifs_every: GifWhereInput
  gifs_some: GifWhereInput
  gifs_none: GifWhereInput
}

input UserWhereUniqueInput {
  id: ID
  email: String
}
